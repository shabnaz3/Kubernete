provider "kubernetes" {
  # Configuration options
    alias = "foo"
    config_path = "~/.kube/config"

}
provider "gitlab" {
  token = " "
  base_url = "https://gitlab.com/"
}

provider "helm" {
  alias = "pakage"
  kubernetes {
    config_path = "~/.kube/config"
  }
}

resource "kubernetes_namespace" "gitlab-runner" {
  metadata {
    annotations = {
      name = "example-annotation"
    }

    labels = {
      mylabel = "label-value"
    }

    name = "gitlab-runner"
  }
}

resource "kubernetes_service_account_v1" "gitlab-runner-serviceaccount" {
   metadata {
     name = "gitlab-runner"
     namespace = "gitlab-runner"
    }
   depends_on = [kubernetes_namespace.gitlab-runner ]
}

resource "kubernetes_role" "example" {
  metadata {
    name = "terraform-gitlab-runner-role"
    namespace = "gitlab-runner"
  }
  rule {
    api_groups     = [""]
    resources      = ["configmaps", "events", "pods", "pods/attach", "pods/exec", "secrets", "services"]
    verbs          = ["list", "get", "watch", "create", "delete"]
  }
  rule {
    api_groups = [""]
    resources  = ["pods/exec"]
    verbs      = ["get", "list"]
  }
  depends_on = [kubernetes_namespace.gitlab-runner]
}

resource "kubernetes_role_binding" "example" {
  metadata {
    name      = "terraform-gitlab-runner-role-binding"
    namespace = "gitlab-runner"
  }
  role_ref {
    api_group = "rbac.authorization.k8s.io"
    kind      = "Role"
    name      = "terraform-gitlab-runner-role"
  }
  subject {
    kind      = "ServiceAccount"
    name      = "gitlab-runner"
    namespace = "gitlab-runner"
  }
  depends_on =[
    kubernetes_namespace.gitlab-runner ,
    kubernetes_service_account_v1.gitlab-runner-serviceaccount
  ]
}

data "gitlab_group" "x" {
   full_path = "x"
}

data "gitlab_project" "neuropil-k8s" {
    path_with_namespace = "x/k8s"
}

resource "gitlab_user_runner" "ldap-dev01-runner" {
  runner_type = "project_type"
  project_id  = xxxxx
}

locals {
  config_toml = <<-EOT
concurrent = 1
check_interval = 0

[session_server]
  session_timeout = 1800

[[runners]]
  name = "ldap-dev01-runner"
  url = "https://gitlab.com"
  token = "${gitlab_user_runner.ldap-dev01-runner.token}"
  executor = "docker"

  [runners.custom_build_dir]
  [runners.cache]
    [runners.cache.s3]
    [runners.cache.gcs]
    [runners.cache.azure]
  [runners.docker]
    tls_verify = true
    image = "ubuntu"
    privileged = true
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = ["/cache", "/certs/client"]
    shm_size = 0
  EOT
}

resource "helm_release" "ldap-dev01-runner" {
  name       = "gitlab-runner"
  repository = "https://charts.gitlab.io"
  chart      = "gitlab-runner"
  namespace =  "gitlab-runner"
  force_update = true
  wait = true



  set{
    name = "gitlabUrl"
    value = "https://gitlab.com/"
  }
  set{
    name = "runnerRegistrationToken"
    value = gitlab_user_runner.ldap-dev01-runner.token
  }
  set {
    name = "config.image"
    value =  "alpine"
  }
  set {
    name = "pull_policy"
    value = "always"
  }
  set {
    name = "config.namespace"
    value = "gitlab-runner"
  }
  set {
    name = "runners.tags"
    value =  "x" 
  }
}

output "tokenValue1" {
   value = nonsensitive(gitlab_user_runner.ldap-dev01-runner.token)
}
